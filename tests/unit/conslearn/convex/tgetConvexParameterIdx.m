classdef tgetConvexParameterIdx < matlab.unittest.TestCase
    %   Copyright 2024 The MathWorks, Inc.

    properties(TestParameter)
        dlnetworkSet = iCreateDlNetworkParams();
    end

    methods (Test)
        function verifyCorrectOutput(testCase, dlnetworkSet)
            % Verify that for different networks the function output is
            % correct.
            actualOut = conslearn.convex.getConvexParameterIdx(dlnetworkSet.net);

            testCase.verifyEqual(actualOut, dlnetworkSet.expectedOut);
        end
    end
end

function param = iCreateDlNetworkParams()
net = dlnetwork([ ...
    featureInputLayer(10, Name="input"), ...
    fullyConnectedLayer(10, Name="fc_+_1")]);
expectedOut = [true false]';
param.SingleFullyConnectedLayerWithPlus = struct( ...
    net = net, ...
    expectedOut = expectedOut);

net = dlnetwork([ ...
    featureInputLayer(10, Name="input"), ...
    fullyConnectedLayer(10, Name="fc_1")]);
expectedOut = [false false]';
param.SingleFullyConnectedLayerNoPlus = struct( ...
    net = net, ...
    expectedOut = expectedOut);

net = dlnetwork([ ...
    featureInputLayer(10, Name="input"), ...
    fullyConnectedLayer(10, Name="fc_+_1"), ...
    reluLayer, ...
    fullyConnectedLayer(10, Name="fc_2")]);
expectedOut = [true false false false]';
param.OneFCLayerWithPlusOneFcLayerNoPlus = struct( ...
    net = net, ...
    expectedOut = expectedOut);

net = dlnetwork([ ...
    featureInputLayer(10, Name="input"), ...
    fullyConnectedLayer(10, Name="fc_+_1"), ...
    reluLayer, ...
    fullyConnectedLayer(10, Name="fc_+_2")]);
expectedOut = [true false true false]';
param.TwoFCLayersWithPlus = struct( ...
    net = net, ...
    expectedOut = expectedOut);
end